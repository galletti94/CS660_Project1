{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf820
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs26 \cf0 \expnd0\expndtw0\kerning0
-- Baichuan Zhou (baichuan@bu.edu)\
-- Please note I didn't put any check/assertion here.\
-- We talked about this in the lab: MySQL DOES NOT support 'check' \
-- I only put some very basic constraints. You should put more based on your assumption\
-- THERE IS NO NEED TO FOLLOW THIS SCHEMA AS LONG AS YOUR DESIGN MAKES SENSE!\
\
DROP DATABASE PHOTOSHARESOLUTION;\
CREATE DATABASE PHOTOSHARESOLUTION;\
USE PHOTOSHARESOLUTION;\
\
-- CREATE USERS TABLE\
CREATE TABLE USERS (\
    user_id INT NOT NULL AUTO_INCREMENT,\
    GENDER VARCHAR(6),\
    EMAIL VARCHAR(40) UNIQUE,\
    PASSWORD VARCHAR(40) NOT NULL,\
    DOB DATE,\
    HOMETOWN VARCHAR(40),\
    first_name VARCHAR(40) NOT NULL,\
    last_name VARCHAR(40) NOT NULL,\
    PRIMARY KEY (user_id)\
);\
\
-- CREATE FRIENDSHIP TABLE\
CREATE TABLE FRIENDSHIP(\
	user_id1 INT NOT NULL,\
	user_id2 INT NOT NULL,\
	PRIMARY KEY(user_id1, user_id2), \
	FOREIGN KEY (user_id1) REFERENCES USERS(user_id) ON DELETE CASCADE,\
	FOREIGN KEY (user_id2) REFERENCES USERS(user_id) ON DELETE CASCADE\
);\
\
\
-- CREATE Album TABLE (include album entity and 'own' relationship) \
CREATE TABLE ALBUMS(\
	album_id INT NOT NULL AUTO_INCREMENT,\
	album_name VARCHAR(40) NOT NULL,\
	DOC TIMESTAMP NOT NULL,\
	user_id INT NOT NULL,\
	PRIMARY KEY (album_id),\
	FOREIGN KEY (user_id) REFERENCES USERS(user_id) ON DELETE CASCADE\
);\
\
-- CREATE Photo TABLE (include photo entity and 'contains' relationship) \
CREATE TABLE PHOTOS(\
	photo_id INT NOT NULL AUTO_INCREMENT,\
	CAPTION VARCHAR(200),\
	DATA BLOB NOT NULL,\
	album_id INT NOT NULL,\
	PRIMARY KEY (photo_id),\
	FOREIGN KEY (album_id) REFERENCES ALBUMS(album_id) ON DELETE CASCADE\
);\
\
-- CREATE Comment TABLE (include comment entity and 'comment' relationship)\
CREATE TABLE COMMENTS(\
	comment_id INT NOT NULL AUTO_INCREMENT,\
	CONTENT VARCHAR(200) NOT NULL,\
	DOC TIMESTAMP NOT NULL,\
	user_id INT NOT NULL,\
	photo_id INT NOT NULL,\
	PRIMARY KEY (comment_id),\
	FOREIGN KEY (user_id) REFERENCES USERS(user_id) ON DELETE CASCADE,\
	FOREIGN KEY (photo_id) REFERENCES PHOTOS(photo_id) ON DELETE CASCADE\
);\
\
-- CREATE THE LIKETABLE. WE CAN'T name it LIKE\
CREATE TABLE LIKETABLE(\
	user_id INT NOT NULL,\
	photo_id INT NOT NULL,\
	DOC TIMESTAMP NOT NULL,\
        PRIMARY KEY (user_id, photo_id),\
	FOREIGN KEY (user_id) REFERENCES USERS(user_id) ON DELETE CASCADE,\
	FOREIGN KEY (photo_id) REFERENCES PHOTOS(photo_id) ON DELETE CASCADE\
);\
\
\
-- CREATE CONTAINS TABLE\
CREATE TABLE contains(\
    album_id int NOT NULL,\
    photo_id int NOT NULL,\
        PRIMARY KEY (album_id, photo_id),\
    FOREIGN KEY (photo_id) REFERENCES PHOTOS(photo_id) ON DELETE CASCADE,\
    FOREIGN KEY (album_id) REFERENCES albums(album_id) ON DELETE CASCADE\
);\
\


    -- CREATE Tag TABLE \
CREATE TABLE TAG(\
	HASHTAG VARCHAR(40) NOT NULL,\
	PRIMARY KEY (HASHTAG)\
);\
-- CREATE Associate Tablephoto is associated with tags\
CREATE TABLE ASSOCIATE(\
	photo_id INT NOT NULL,\
	HASHTAG VARCHAR(40) NOT NULL,\
        PRIMARY KEY (photo_id, HASHTAG),\
	FOREIGN KEY (HASHTAG) REFERENCES TAG(HASHTAG) ON DELETE CASCADE,\
	FOREIGN KEY (photo_id) REFERENCES PHOTOS(photo_id) ON DELETE CASCADE\
);\
}
